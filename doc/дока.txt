Когда пользователь впервые заходит на страницу Rgame, проверяется сессия и если он не залогинен, его отшвыривает на /login.
I) Когда в сессию записан id команды(на всех одни логин и пароль), выясняем:
	1. какая игра текущая(должна быть только одна, проверяется вручную, поле current в базе должно быть true), 
	2. какая команда зашла(session[:team_id])
	3. есть ли запись в логе этой игры об этой команде(она создается когда игра началась и пользователь заходит на страницу игры)
II) Если записи о команде нет, а игра начата, но еще не закончена(или перенесли время, а команда уже заходила), создаем ее с параметрами:
	1. game_id(п.1 выше)
	2. team_id(п.2 выше)
	3. current_task_id - берем первое значение отсортированного по полю order_n списка-выборку из таблицы порядка заданий, которые еще не решены и не сняты, для команды на эту игру (TaskOrder.where(game_id: @current_game.id, team_id: session[:team_id], solved: false, dropped: false, ).order(:order_n))
	4. current_task_entered_at - ставим текущее время.
	
	Таким образом мы получаем запись о получении первого задания командой Х на текущую игру.
Данные действия происходят по дефолту перед каждым экшном контроллера игры.

TODO: возможность команды стартовать игру позже

Вид:
На странице игры(@current_game), если она еще не началась(started?(self.date.nil? ? false : Time.now > self.date)), игрок видит название игры, таймер обратного отчета и часы яндекса для того чтобы сверить время, логин и кнопка Выйти.

Когда таймер достигает нуля, страница перезагружается(если все нормально, то именно в этот момент локальное время больше назначенного времени старта игры), создается запись в логе игры(rgame), игра является начатой и пользователю выводится первое задание согласно записи в логе, которая берется из очереди заданий. Также, если еще не время для подсказок, выводится время до первой подсказки. Если с момента выдачи задания прошло 30 минут, выдается подсказка и показывается время до второй подсказки.

Если в какое-то время был отправлен код, если игра не закончена, то из кода удаляются пробелы и проверяется на наличие в массиве из кодов задания минус отвеченные. Если есть вхождение, из массива неотвеченных  вычитается введенный код и если все коды введены, текущее задание завершается(в лог записывается время конца) и создается новая запись с пустым временем конца(если задание не последнее).

Если время задания прошло, счетчик обновляет страницу

